$Data

#_G
*table
Proxied environment table (_ENV), enabling contextual overrides

#GLOBALS
table
Raw global table (original _G)

----

$Func

#rawnext
`obj`(table) `key`
`key`, `value`

#next
`obj`(table) `key`
`key`, `value`

#rawpairs
`obj`(table)
`iter`((`obj`(table),`key`)->(`key`,`value`)), `obj`(table)

#qrawpairs
`obj`(table)
`iter`((`obj`(table),`key`)->(`key`,`value`)), `obj`(table)

#rawinext
`obj`(table), `idx`(nil|+Int)
`idx`(nil|+Int), `value`

#inext
`obj`(table), `idx`(nil|+Int)
`idx`(nil|+Int), `value`

#rawipairs
`obj`(table)
`iter`((`obj`(table),`idx`(nil|+Int))->(`idx`(nil|+Int),`value`)), `obj`(table)

#qrawipairs
`obj`(table)
`iter`((`obj`(table),`idx`(nil|+Int))->(`idx`(nil|+Int),`value`)), `obj`(table)

#getfenv
`func`((...)->(...))
`env`(nil|table)

#setfenv
`func`((...)->(...)) `env`(table)
>>>>

#table.rawinsert
`data`(Array), `pos`(nil|+Int) ~ value
>>>>

#table.insert
`data`(Array), `pos`(nil|+Int) ~ value
>>>>

#table.rawremove
`data`(Array), `pos`(nil|+Int)
`value`

#table.remove
`data`(Array), `pos`(nil|+Int)
`value`